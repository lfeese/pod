variant: fcos
version: 1.4.0
passwd:
  users:
  - name: core
    password_hash: $y$j9T$iSvL/BM1VfuGdo5tKmfsV.$B3Tkzk7SNL6G3C5nA0Ac6ITZpZRQ4b4FVsTkRhOOPd6
    # TODO: Remove this development key
    ssh_authorized_keys:
    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILwM0/xxr8JjaEuEJTIBdw6U33aIsVC929aB507UbstQ abalmos@localhost-live
    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE1UcxIpytA8iIsGsAapIAiwzkDkyMi5bnP1+wLe2beD abalmos@phi

storage:
  trees:

  - local: cloudflared
    path: /etc/cloudflared 

  # - local: nftables
  #   path: /etc/nftables

  - local: systemd-network
    path: /etc/systemd/network

  # - local: dnsmasq.d
  #   path: /etc/dnsmasq.d

  - local: wpa_supplicant
    path: /etc/wpa_supplicant

  - local: compose
    path: /etc/docker/compose

  files:
  # - path: /etc/sysconfig/nftables.conf
  #   mode: 0600
  #   overwrite: true
  #   contents: 
  #     inline: |
  #       include "/etc/nftables/loramon-ipv4-nat.nft" 

  - path: /etc/sysconfig/wpa_supplicant
    mode: 0644
    overwrite: true
    contents:
      inline: |
        INTERFACES="-iwifi-sta"
        DRIVERS=""
        OTHER_ARGS="-s"

  - path: /etc/hostname
    mode: 0644
    contents: 
      inline: |
        loramon-001

  - path: /etc/sysctl.d/95-enable-overcommit_memory.conf
    mode: 0644
    contents:
      inline: |
        vm.overcommit_memory = 1

  - path: /etc/hostapd/hostapd.conf
    mode: 0644
    contents:
      local: hostapd.conf

  #############################
  ## Enable nftables backend ##
  #############################
  links:
    - path: /etc/alternatives/iptables
      target: /usr/sbin/iptables-nft
      overwrite: true
      hard: false

    - path: /etc/alternatives/iptables-restore
      target: /usr/sbin/iptables-nft-restore
      overwrite: true
      hard: false

    - path: /etc/alternatives/iptables-save
      target: /usr/sbin/iptables-nft-save
      overwrite: true
      hard: false

    - path: /etc/alternatives/ip6tables
      target: /usr/sbin/ip6tables-nft
      overwrite: true
      hard: false

    - path: /etc/alternatives/ip6tables-restore
      target: /usr/sbin/ip6tables-nft-restore
      overwrite: true
      hard: false

    - path: /etc/alternatives/ip6tables-save
      target: /usr/sbin/ip6tables-nft-save
      overwrite: true
      hard: false

systemd:
  units:
    # Installed needed packages on first-boot
  - name: rpm-ostree-install.service
    enabled: true
    contents: |
      [Unit]
      Description=Install required system packages
      Wants=network-online.target
      After=network-online.target

      # We run before `zincati.service` to avoid conflicting rpm-ostree transactions.
      Before=zincati.service
      ConditionPathExists=!/var/lib/%N.stamp

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      # TODO: Move most of these to a docker container (?)
      ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive docker-compose neovim hostapd systemd-networkd wpa_supplicant
      ExecStart=/bin/touch /var/lib/%N.stamp
      ExecStart=/usr/bin/systemctl disable NetworkManager
      ExecStart=/usr/bin/systemctl mask NetworkManager
      ExecStart=/usr/bin/systemctl unmask systemd-networkd
      ExecStart=/usr/bin/systemctl enable systemd-networkd
      ExecStart=/usr/bin/systemctl unmask hostapd
      ExecStart=/usr/bin/systemctl enable hostapd
      
     
      # Restart the system to get normal "boot up" environment
      ExecStartPost=/usr/bin/systemctl reboot

      [Install]
      WantedBy=multi-user.target

  # Dbus does not block sysinit.taget until after dbus started, making networkd fail to start. Fixed in dbus-broker 29-1.
  - name: dbus-broker.service
    dropins: 
      - name: delay-sysinit-until-after-dbus.conf
        contents: |
          [Unit]
          After=dbus.socket sysinit.target

  # Disable THP for redis
  - name: disable-transparent-huge-pages.service
    enabled: true
    contents: |
      [Unit]
      Description=Disable Transparent Huge Pages

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/sh -c "/usr/bin/echo never | tee /sys/kernel/mm/transparent_hugepage/enabled"
      ExecStart=/usr/bin/sh -c "/usr/bin/echo never | tee /sys/kernel/mm/transparent_hugepage/defrag"

      [Install]
      WantedBy=multi-user.target

  # Enable nftables
  # - name: nftables.service
  #   enabled: true

  # Enable hostapd
  - name: hostapd.service
    mask: false
    enabled: true
    dropins:
    - name: restart-on-failure.conf
      contents: |
        [Service]
        Restart=on-failure

  # # Enable dnsmasq, but start after networking is online (hostapd is up)
  # - name: dnsmasq.service
  #   mask: false
  #   enabled: true
  #   dropins:
  #   - name: after-network-online.conf
  #     contents: |
  #       [Unit]
  #       Wants=network-online.target
  #       After=network-online.target


  # Manage docker-compose with 
  - name: docker-compose@.service
    contents: |
      [Unit]
      Description=%i service with docker-compose
      Requires=docker.service rpm-ostree-install.service
      After=docker.service rpm-ostree-install.service
      StartLimitIntervalSec=0

      [Service]
      Type=oneshot
      Restart=on-failure
      RestartSec=5s
      RemainAfterExit=true
      WorkingDirectory=/etc/docker/compose/%i
      ExecStart=/usr/bin/docker-compose up -d --remove-orphans
      ExecStop=/usr/bin/docker-compose down

      [Install]
      WantedBy=multi-user.target

  - name: docker-compose@lorawan.service
    enabled: true

  - name: cloudflared@.service
    mask: false
    enabled: true
    contents: |
      [Unit]
      Description=Cloudflared tunnel for Chripstack, ThingsBoard, and SSH access
      Wants=network-online.target
      After=network-online.target
      RequiresMountsFor=%t/containers

      [Service]
      Environment=PODMAN_SYSTEMD_UNIT=%n
      Restart=on-failure
      TimeoutStopSec=70
      ExecStartPre=/bin/rm -f %t/%n.ctr-id
      ExecStart=/usr/bin/podman run --cidfile=%t/%n.ctr-id --cgroups=no-conmon --rm --sdnotify=conmon -d --network=host --user=0 -v /etc/cloudflared:/root/.cloudflared/:Z docker.io/cloudflare/cloudflared:2022.2.2 tunnel run %i
      ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
      ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
      Type=notify
      NotifyAccess=all

      [Install]
      WantedBy=default.target

