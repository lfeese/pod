variant: fcos
version: 1.4.0
passwd:
  users:
  - name: core
    password_hash: $y$j9T$iSvL/BM1VfuGdo5tKmfsV.$B3Tkzk7SNL6G3C5nA0Ac6ITZpZRQ4b4FVsTkRhOOPd6
    # TODO: Remove this development key
    ssh_authorized_keys:
    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILwM0/xxr8JjaEuEJTIBdw6U33aIsVC929aB507UbstQ abalmos@localhost-live
    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE1UcxIpytA8iIsGsAapIAiwzkDkyMi5bnP1+wLe2beD abalmos@phi

storage:
  trees:
    # Add network config
  - local: systemd-network
    path: /etc/systemd/network

    # Add Wi-Fi client config
  - local: wpa_supplicant
    path: /etc/wpa_supplicant

    # Add Thingsboard/Chripstack podman-compose config
  - local: compose
    path: /etc/containers/compose

  files:
    # Enable wpa_supplicant for wifi-sta interface
  - path: /etc/sysconfig/wpa_supplicant
    mode: 0644
    overwrite: true
    contents:
      inline: |
        INTERFACES="-iwifi-sta"
        DRIVERS=""
        OTHER_ARGS="-s"

    # Set the hostname
  - path: /etc/hostname
    mode: 0644
    contents: 
      inline: |
        lmdev

    # Allow overcommit_memory for redis
  - path: /etc/sysctl.d/95-enable-overcommit_memory.conf
    mode: 0644
    contents:
      inline: |
        vm.overcommit_memory = 1

    # Add hostapd config
  - path: /etc/hostapd/hostapd.conf
    mode: 0644
    contents:
      local: hostapd.conf

  ################################
  # Optional: Cloudflared Tunnel #
  ################################
  - path: /etc/cloudflared/cert.pem
    mode: 0600
    contents:
      local: cloudflared-credentails/cert.pem

  - path: /etc/cloudflared/e22139d1-353c-4e6b-b260-e143d3e4c9ee.json
    mode: 0600
    contents:
      local: cloudflared-credentails/e22139d1-353c-4e6b-b260-e143d3e4c9ee.json

    # Note `/etc/cloudflared` is mounted to `/root/.cloudflared` in cloudflared container, so paths
    # should be relateive to `/root/.cloudflared`
  - path: /etc/cloudflared/config.yaml
    mode: 0600
    contents:
      inline: |
        tunnel: e22139d1-353c-4e6b-b260-e143d3e4c9ee
        credentials-files: /root/.cloudflared/e22139d1-353c-4e6b-b260-e143d3e4c9ee.json
        origincert: /root/.cloudflared/cert.pem

        ingress:
          - hostname: lmdev.balmos.org
            service: http://localhost:80
          - hostname: lmdev-cs.balmos.org
            service: http://localhost:8080
          - hostname: lmdev-ssh.balmos.org
            service: ssh://localhost:22
          - service: http_status:404
      
  # Enable nftables backend #
  # TODO: Remove after nftables becomes default in coreos
  links:
    - path: /etc/alternatives/iptables
      target: /usr/sbin/iptables-nft
      overwrite: true
      hard: false

    - path: /etc/alternatives/iptables-restore
      target: /usr/sbin/iptables-nft-restore
      overwrite: true
      hard: false

    - path: /etc/alternatives/iptables-save
      target: /usr/sbin/iptables-nft-save
      overwrite: true
      hard: false

    - path: /etc/alternatives/ip6tables
      target: /usr/sbin/ip6tables-nft
      overwrite: true
      hard: false

    - path: /etc/alternatives/ip6tables-restore
      target: /usr/sbin/ip6tables-nft-restore
      overwrite: true
      hard: false

    - path: /etc/alternatives/ip6tables-save
      target: /usr/sbin/ip6tables-nft-save
      overwrite: true
      hard: false

systemd:
  units:
    # Installed needed packages on first-boot
  - name: rpm-ostree-install.service
    enabled: true
    contents: |
      [Unit]
      Description=Install required system packages
      Wants=network-online.target
      After=network-online.target

      # We run before `zincati.service` to avoid conflicting rpm-ostree transactions.
      Before=zincati.service
      ConditionPathExists=!/var/lib/%N.stamp

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      # TODO: Move most of these to a container (?)
      ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive neovim hostapd systemd-networkd wpa_supplicant podman-compose
      ExecStart=/bin/touch /var/lib/%N.stamp
      ExecStart=/usr/bin/systemctl disable NetworkManager
      ExecStart=/usr/bin/systemctl mask NetworkManager
      ExecStart=/usr/bin/systemctl unmask systemd-networkd
      ExecStart=/usr/bin/systemctl enable systemd-networkd
      ExecStart=/usr/bin/systemctl unmask hostapd
      ExecStart=/usr/bin/systemctl enable hostapd
      ExecStart=/usr/bin/systemctl unmask wpa_supplicant
      ExecStart=/usr/bin/systemctl enable wpa_supplicant
      
     
      # Restart the system to get normal "boot up" environment
      ExecStartPost=/usr/bin/systemctl reboot

      [Install]
      WantedBy=multi-user.target

  # Dbus does not block sysinit.taget until after dbus started, making networkd fail to start.
  # TODO: Fixed in dbus-broker 29-1 -- remove then.
  - name: dbus-broker.service
    dropins:
      - name: delay-sysinit-until-after-dbus.conf
        contents: |
          [Unit]
          After=dbus.socket

  # - name: systemd-networkd.service
  #   dropins: 
  #     - name: delay-until-after-dbus.conf
  #       contents: |
  #         [Unit]
  #         After=dbus.socket

  # Disable THP for redis
  - name: disable-transparent-huge-pages.service
    enabled: true
    contents: |
      [Unit]
      Description=Disable Transparent Huge Pages

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/sh -c "/usr/bin/echo never | tee /sys/kernel/mm/transparent_hugepage/enabled"
      ExecStart=/usr/bin/sh -c "/usr/bin/echo never | tee /sys/kernel/mm/transparent_hugepage/defrag"

      [Install]
      WantedBy=multi-user.target

  # Enable hostapd
  - name: hostapd.service
    mask: false
    enabled: false # Enabled by rpm-ostree-install.service, once hostapd is installed
    dropins:
    - name: restart-on-failure.conf
      contents: |
        [Service]
        Restart=on-failure

  # Manage podman-compose with 
  - name: podman-compose@.service
    contents: |
      [Unit]
      Description=%i service with podman-compose
      # Don't start unless we have first-boot installed it
      Requires=rpm-ostree-install.service
      After=rpm-ostree-install.service
      StartLimitIntervalSec=0

      [Service]
      Type=oneshot
      Restart=on-failure
      RestartSec=5s
      RemainAfterExit=true
      WorkingDirectory=/etc/containers/compose/%i
      ExecStart=/usr/bin/podman-compose up -d --remove-orphans
      ExecStop=/usr/bin/podman-compose down

      [Install]
      WantedBy=multi-user.target

  # Enable lorawan compose
  - name: podman-compose@lorawan.service
    enabled: true

  # Manage cloudflared podman container with systemd
  - name: cloudflared@.service
    mask: false
    enabled: true
    contents: |
      [Unit]
      Description=Cloudflared tunnel for Chripstack, ThingsBoard, and SSH access
      Wants=network-online.target
      After=network-online.target
      RequiresMountsFor=%t/containers
      StartLimitIntervalSec=0

      [Service]
      Environment=PODMAN_SYSTEMD_UNIT=%n
      Restart=always
      RestartSec=5s
      ExecStartPre=/bin/rm -f %t/%n.ctr-id
      ExecStart=/usr/bin/podman run --cidfile=%t/%n.ctr-id --cgroups=no-conmon --rm --sdnotify=conmon -d --network=host --user=0 -v /etc/cloudflared:/root/.cloudflared/:Z docker.io/cloudflare/cloudflared:2022.2.2 tunnel run %i
      ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
      ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
      Type=notify
      NotifyAccess=all

      [Install]
      WantedBy=default.target

  # Enable tunnel
  - name: cloudflared@e22139d1-353c-4e6b-b260-e143d3e4c9ee.service
    mask: false
    enabled: true
